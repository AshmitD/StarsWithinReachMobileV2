{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport FirebaseKeys from \"./Config\";\nimport firebase from 'firebase';\n\nvar Fire = function () {\n  function Fire() {\n    var _this = this;\n\n    _classCallCheck(this, Fire);\n\n    this.addPost = function _callee(_ref) {\n      var text, localUri, remoteUri;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              text = _ref.text, localUri = _ref.localUri;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(_this.uploadPhotoAsync(localUri));\n\n            case 3:\n              remoteUri = _context.sent;\n              return _context.abrupt(\"return\", new Promise(function (res, rej) {\n                _this.firestore.collection(\"posts\").add({\n                  text: text,\n                  uid: _this.uid,\n                  timestamp: _this.timestamp,\n                  image: remoteUri\n                }).then(function (ref) {\n                  res(ref);\n                }).catch(function (error) {\n                  rej(error);\n                });\n              }));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    this.getUserData = function _callee2(email) {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", new Promise(function (res, rej) {\n                _this.firestore.collection(\"users\").where(\"email\", \"==\", email).get().then(function (querySnapshot) {\n                  querySnapshot.forEach(function (doc) {\n                    res({\n                      id: doc.id,\n                      user: doc.data()\n                    });\n                  });\n                }).catch(function (error) {\n                  rej(\"Error getting documents: \", error);\n                });\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    this.addUser = function _callee3(_ref2) {\n      var name, email, who, shortBio;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              name = _ref2.name, email = _ref2.email, who = _ref2.who, shortBio = _ref2.shortBio;\n              return _context3.abrupt(\"return\", new Promise(function (res, rej) {\n                _this.firestore.collection(\"users\").add({\n                  name: name,\n                  email: email,\n                  who: who,\n                  shortBio: shortBio\n                }).then(function (ref) {\n                  res(ref);\n                }).catch(function (error) {\n                  rej(error);\n                  console.log(error);\n                });\n              }));\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    this.addProject = function _callee4(_ref3) {\n      var title, descrip, resources, endGoal, studentsActiosn;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              title = _ref3.title, descrip = _ref3.descrip, resources = _ref3.resources, endGoal = _ref3.endGoal, studentsActiosn = _ref3.studentsActiosn;\n              return _context4.abrupt(\"return\", new Promise(function (res, rej) {\n                _this.firestore.collection(\"projects\").add({\n                  title: title,\n                  descrip: descrip,\n                  resources: resources,\n                  endGoal: endGoal\n                }).then(function (ref) {\n                  res(ref);\n                }).catch(function (error) {\n                  rej(error);\n                  console.log(\"The error is\", error);\n                });\n              }));\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    this.uploadPhotoAsync = function _callee7(uri) {\n      var path;\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              path = \"photos/\" + _this.uid + \"/\" + Date.now() + \".jpg\";\n              return _context7.abrupt(\"return\", new Promise(function _callee6(res, rej) {\n                var response, file, upload;\n                return _regeneratorRuntime.async(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        _context6.next = 2;\n                        return _regeneratorRuntime.awrap(fetch(uri).catch(function (error) {\n                          rej(error);\n                        }));\n\n                      case 2:\n                        response = _context6.sent;\n                        _context6.next = 5;\n                        return _regeneratorRuntime.awrap(response.blob().catch(function (error) {\n                          rej(error);\n                        }));\n\n                      case 5:\n                        file = _context6.sent;\n                        upload = firebase.storage().ref(path).put(file);\n                        upload.on(\"state_changed\", function (snapshot) {}, function (err) {\n                          rej(err);\n                        }, function _callee5() {\n                          var url;\n                          return _regeneratorRuntime.async(function _callee5$(_context5) {\n                            while (1) {\n                              switch (_context5.prev = _context5.next) {\n                                case 0:\n                                  _context5.next = 2;\n                                  return _regeneratorRuntime.awrap(upload.snapshot.ref.getDownloadURL());\n\n                                case 2:\n                                  url = _context5.sent;\n                                  res(url);\n\n                                case 4:\n                                case \"end\":\n                                  return _context5.stop();\n                              }\n                            }\n                          }, null, null, null, Promise);\n                        });\n\n                      case 8:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              }));\n\n            case 2:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    firebase.initializeApp(FirebaseKeys);\n  }\n\n  _createClass(Fire, [{\n    key: \"firestore\",\n    get: function get() {\n      return firebase.firestore();\n    }\n  }, {\n    key: \"uid\",\n    get: function get() {\n      return (firebase.auth().currentUser || {}).uid;\n    }\n  }, {\n    key: \"timestamp\",\n    get: function get() {\n      return Date.now();\n    }\n  }]);\n\n  return Fire;\n}();\n\nFire.shared = new Fire();\nexport default Fire;","map":{"version":3,"sources":["/Users/ashmitdewan/StarsWithinReachMobileV2/Fire.js"],"names":["FirebaseKeys","firebase","Fire","addPost","text","localUri","uploadPhotoAsync","remoteUri","Promise","res","rej","firestore","collection","add","uid","timestamp","image","then","ref","catch","error","getUserData","email","where","get","querySnapshot","forEach","doc","id","user","data","addUser","name","who","shortBio","console","log","addProject","title","descrip","resources","endGoal","studentsActiosn","uri","path","Date","now","fetch","response","blob","file","upload","storage","put","on","snapshot","err","getDownloadURL","url","initializeApp","auth","currentUser","shared"],"mappings":"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","sourcesContent":["import FirebaseKeys from './Config'\nimport firebase from 'firebase'\n\nclass Fire {\n    constructor() {\n        firebase.initializeApp(FirebaseKeys)\n    }\n\n    addPost = async({text, localUri}) => {\n        const remoteUri = await this.uploadPhotoAsync(localUri)\n      \n        return new Promise((res,rej) => {\n          \n            this.firestore.collection(\"posts\").add({\n                text,\n                uid: this.uid,\n                timestamp: this.timestamp,\n                image: remoteUri\n            })\n            .then(ref => {\n                res(ref)\n            })\n            .catch(error => {\n                rej(error)\n            })\n        })\n    }\n    getUserData = async(email) => {\n        return new Promise((res, rej) => {\n            this.firestore.collection(\"users\").where(\"email\", \"==\", email)\n            .get()\n            .then(function(querySnapshot) {\n                querySnapshot.forEach(function(doc) {\n                    // doc.data() is never undefined for query doc snapshots\n                   \n                    res({id: doc.id, user: doc.data()});\n                });\n            })\n            .catch(function(error) {\n                rej(\"Error getting documents: \", error);\n            });        \n        })\n    }\n    addUser = async({name, email, who, shortBio}) => {\n        return new Promise((res, rej) => {\n        \n            this.firestore.collection(\"users\").add({\n                name: name,\n                email: email, \n                who: who,\n                shortBio: shortBio,\n            \n            }) \n            .then(ref => {\n                res(ref)\n            })\n            .catch(error => {\n                rej(error)\n                console.log(error)\n            })\n        })\n    }\n    addProject = async({title, descrip, resources, endGoal, studentsActiosn}) => {\n        return new Promise((res, rej) => {\n        \n            this.firestore.collection(\"projects\").add({\n                title: title,\n                descrip: descrip, \n                resources: resources,\n                endGoal: endGoal,\n            \n            }) \n            .then(ref => {\n                res(ref)\n            })\n            .catch(error => {\n                rej(error)\n                console.log(\"The error is\", error)\n            })\n        })\n    }\n    uploadPhotoAsync = async uri => {\n        const path = `photos/${this.uid}/${Date.now()}.jpg`\n       \n        return new Promise(async (res,rej) => {\n\n            const response = await fetch(uri).catch(error => {\n               \n                rej(error)\n            })\n        \n            const file =await response.blob().catch(error => {\n                rej(error)\n            })\n  \n          \n            let upload = firebase.storage().ref(path).put(file)\n          \n            upload.on(\"state_changed\", snapshot => {}, err => {\n               \n                rej(err)\n            },\n            async() => {\n    \n                const url = await upload.snapshot.ref.getDownloadURL();\n   \n                res(url)\n            })\n        })\n    }\n    get firestore() {\n        return firebase.firestore()\n    }\n\n    get uid() {\n        return (firebase.auth().currentUser || {}).uid\n    }\n\n    get timestamp() {\n        return Date.now()\n    }\n}\n\n\nFire.shared = new Fire()\nexport default Fire\n"]},"metadata":{},"sourceType":"module"}